#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 17, 2017 11:31:34 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import principal_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    principal_support.set_Tk_var()
    top = Trabajo_Practico_1 (root)
    principal_support.init(root, top)
    root.mainloop()

w = None
def create_Trabajo_Practico_1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    principal_support.set_Tk_var()
    top = Trabajo_Practico_1 (w)
    principal_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Trabajo_Practico_1():
    global w
    w.destroy()
    w = None


class Trabajo_Practico_1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Segoe UI} -size 9 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 11 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1250x658")
        top.title("Trabajo Practico 1")
        top.configure(background="#e7e7e7")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.puertoSerialEntry = Entry(top)
        self.puertoSerialEntry.place(relx=0.43, rely=0.1, relheight=0.04
                , relwidth=0.2)
        self.puertoSerialEntry.configure(background="white")
        self.puertoSerialEntry.configure(disabledforeground="#a3a3a3")
        self.puertoSerialEntry.configure(font="TkFixedFont")
        self.puertoSerialEntry.configure(foreground="#000000")
        self.puertoSerialEntry.configure(highlightbackground="#d9d9d9")
        self.puertoSerialEntry.configure(highlightcolor="black")
        self.puertoSerialEntry.configure(insertbackground="black")
        self.puertoSerialEntry.configure(selectbackground="#c4c4c4")
        self.puertoSerialEntry.configure(selectforeground="black")

        self.dispositivoEntry = Entry(top)
        self.dispositivoEntry.place(relx=0.17, rely=0.47, relheight=0.04
                , relwidth=0.2)
        self.dispositivoEntry.configure(background="white")
        self.dispositivoEntry.configure(disabledforeground="#a3a3a3")
        self.dispositivoEntry.configure(font="TkFixedFont")
        self.dispositivoEntry.configure(foreground="#000000")
        self.dispositivoEntry.configure(highlightbackground="#d9d9d9")
        self.dispositivoEntry.configure(highlightcolor="black")
        self.dispositivoEntry.configure(insertbackground="black")
        self.dispositivoEntry.configure(selectbackground="#c4c4c4")
        self.dispositivoEntry.configure(selectforeground="black")

        self.puertoSerialLb = Label(top)
        self.puertoSerialLb.place(relx=0.27, rely=0.1, height=30, width=190)
        self.puertoSerialLb.configure(activebackground="#f9f9f9")
        self.puertoSerialLb.configure(activeforeground="black")
        self.puertoSerialLb.configure(anchor=E)
        self.puertoSerialLb.configure(background="#e7e7e7")
        self.puertoSerialLb.configure(disabledforeground="#000000")
        self.puertoSerialLb.configure(foreground="#000000")
        self.puertoSerialLb.configure(highlightbackground="#e7e7e7")
        self.puertoSerialLb.configure(highlightcolor="black")
        self.puertoSerialLb.configure(justify=RIGHT)
        self.puertoSerialLb.configure(text='''Puerto Serial''')

        self.timeOutLb = Label(top)
        self.timeOutLb.place(relx=0.27, rely=0.14, height=30, width=190)
        self.timeOutLb.configure(activebackground="#f9f9f9")
        self.timeOutLb.configure(activeforeground="black")
        self.timeOutLb.configure(anchor=E)
        self.timeOutLb.configure(background="#e7e7e7")
        self.timeOutLb.configure(disabledforeground="#a3a3a3")
        self.timeOutLb.configure(foreground="#000000")
        self.timeOutLb.configure(highlightbackground="#d9d9d9")
        self.timeOutLb.configure(highlightcolor="black")
        self.timeOutLb.configure(justify=RIGHT)
        self.timeOutLb.configure(text='''Time Out''')

        self.dispositivoLb = Label(top)
        self.dispositivoLb.place(relx=0.02, rely=0.47, height=30, width=190)
        self.dispositivoLb.configure(activebackground="#f9f9f9")
        self.dispositivoLb.configure(activeforeground="black")
        self.dispositivoLb.configure(anchor=E)
        self.dispositivoLb.configure(background="#e7e7e7")
        self.dispositivoLb.configure(disabledforeground="#a3a3a3")
        self.dispositivoLb.configure(foreground="#000000")
        self.dispositivoLb.configure(highlightbackground="#d9d9d9")
        self.dispositivoLb.configure(highlightcolor="black")
        self.dispositivoLb.configure(justify=RIGHT)
        self.dispositivoLb.configure(text='''Dispositivo''')

        self.funcionLb = Label(top)
        self.funcionLb.place(relx=0.02, rely=0.56, height=30, width=190)
        self.funcionLb.configure(activebackground="#f9f9f9")
        self.funcionLb.configure(activeforeground="black")
        self.funcionLb.configure(anchor=E)
        self.funcionLb.configure(background="#e7e7e7")
        self.funcionLb.configure(disabledforeground="#a3a3a3")
        self.funcionLb.configure(foreground="#000000")
        self.funcionLb.configure(highlightbackground="#d9d9d9")
        self.funcionLb.configure(highlightcolor="black")
        self.funcionLb.configure(justify=RIGHT)
        self.funcionLb.configure(text='''Funcion''')

        self.baudiosLb = Label(top)
        self.baudiosLb.place(relx=0.27, rely=0.19, height=30, width=190)
        self.baudiosLb.configure(activebackground="#f9f9f9")
        self.baudiosLb.configure(activeforeground="black")
        self.baudiosLb.configure(anchor=E)
        self.baudiosLb.configure(background="#e7e7e7")
        self.baudiosLb.configure(disabledforeground="#a3a3a3")
        self.baudiosLb.configure(foreground="#000000")
        self.baudiosLb.configure(highlightbackground="#d9d9d9")
        self.baudiosLb.configure(highlightcolor="black")
        self.baudiosLb.configure(justify=RIGHT)
        self.baudiosLb.configure(text='''Baudios''')

        self.direccionInicialLb = Label(top)
        self.direccionInicialLb.place(relx=0.02, rely=0.52, height=30, width=190)

        self.direccionInicialLb.configure(activebackground="#f9f9f9")
        self.direccionInicialLb.configure(activeforeground="black")
        self.direccionInicialLb.configure(anchor=E)
        self.direccionInicialLb.configure(background="#e7e7e7")
        self.direccionInicialLb.configure(disabledforeground="#a3a3a3")
        self.direccionInicialLb.configure(foreground="#000000")
        self.direccionInicialLb.configure(highlightbackground="#d9d9d9")
        self.direccionInicialLb.configure(highlightcolor="black")
        self.direccionInicialLb.configure(justify=RIGHT)
        self.direccionInicialLb.configure(text='''Direccion Inicial''')

        self.cantidadDeVariablesLb = Label(top)
        self.cantidadDeVariablesLb.place(relx=0.02, rely=0.61, height=30
                , width=190)
        self.cantidadDeVariablesLb.configure(activebackground="#f9f9f9")
        self.cantidadDeVariablesLb.configure(activeforeground="black")
        self.cantidadDeVariablesLb.configure(anchor=E)
        self.cantidadDeVariablesLb.configure(background="#e7e7e7")
        self.cantidadDeVariablesLb.configure(disabledforeground="#a3a3a3")
        self.cantidadDeVariablesLb.configure(foreground="#000000")
        self.cantidadDeVariablesLb.configure(highlightbackground="#d9d9d9")
        self.cantidadDeVariablesLb.configure(highlightcolor="black")
        self.cantidadDeVariablesLb.configure(justify=RIGHT)
        self.cantidadDeVariablesLb.configure(text='''Cantidad de variables''')

        self.cantidadIntentosLb = Label(top)
        self.cantidadIntentosLb.place(relx=0.27, rely=0.24, height=30, width=190)

        self.cantidadIntentosLb.configure(activebackground="#f9f9f9")
        self.cantidadIntentosLb.configure(activeforeground="black")
        self.cantidadIntentosLb.configure(anchor=E)
        self.cantidadIntentosLb.configure(background="#e7e7e7")
        self.cantidadIntentosLb.configure(disabledforeground="#a3a3a3")
        self.cantidadIntentosLb.configure(foreground="#000000")
        self.cantidadIntentosLb.configure(highlightbackground="#d9d9d9")
        self.cantidadIntentosLb.configure(highlightcolor="black")
        self.cantidadIntentosLb.configure(justify=RIGHT)
        self.cantidadIntentosLb.configure(text='''Cantidad de Intentos''')

        self.direccionInicialEntry = Entry(top)
        self.direccionInicialEntry.place(relx=0.17, rely=0.52, relheight=0.04
                , relwidth=0.2)
        self.direccionInicialEntry.configure(background="white")
        self.direccionInicialEntry.configure(disabledforeground="#a3a3a3")
        self.direccionInicialEntry.configure(font="TkFixedFont")
        self.direccionInicialEntry.configure(foreground="#000000")
        self.direccionInicialEntry.configure(highlightbackground="#d9d9d9")
        self.direccionInicialEntry.configure(highlightcolor="black")
        self.direccionInicialEntry.configure(insertbackground="black")
        self.direccionInicialEntry.configure(selectbackground="#c4c4c4")
        self.direccionInicialEntry.configure(selectforeground="black")

        self.timeoutEntry = Entry(top)
        self.timeoutEntry.place(relx=0.43, rely=0.15, relheight=0.04
                , relwidth=0.2)
        self.timeoutEntry.configure(background="white")
        self.timeoutEntry.configure(disabledforeground="#a3a3a3")
        self.timeoutEntry.configure(font="TkFixedFont")
        self.timeoutEntry.configure(foreground="#000000")
        self.timeoutEntry.configure(highlightbackground="#d9d9d9")
        self.timeoutEntry.configure(highlightcolor="black")
        self.timeoutEntry.configure(insertbackground="black")
        self.timeoutEntry.configure(selectbackground="#c4c4c4")
        self.timeoutEntry.configure(selectforeground="black")

        self.baudiosEntry = Entry(top)
        self.baudiosEntry.place(relx=0.43, rely=0.19, relheight=0.04
                , relwidth=0.2)
        self.baudiosEntry.configure(background="white")
        self.baudiosEntry.configure(disabledforeground="#a3a3a3")
        self.baudiosEntry.configure(font="TkFixedFont")
        self.baudiosEntry.configure(foreground="#000000")
        self.baudiosEntry.configure(highlightbackground="#d9d9d9")
        self.baudiosEntry.configure(highlightcolor="black")
        self.baudiosEntry.configure(insertbackground="black")
        self.baudiosEntry.configure(selectbackground="#c4c4c4")
        self.baudiosEntry.configure(selectforeground="black")

        self.cantidadVariablesEntry = Entry(top)
        self.cantidadVariablesEntry.place(relx=0.17, rely=0.61, relheight=0.04
                , relwidth=0.2)
        self.cantidadVariablesEntry.configure(background="white")
        self.cantidadVariablesEntry.configure(disabledforeground="#a3a3a3")
        self.cantidadVariablesEntry.configure(font="TkFixedFont")
        self.cantidadVariablesEntry.configure(foreground="#000000")
        self.cantidadVariablesEntry.configure(highlightbackground="#d9d9d9")
        self.cantidadVariablesEntry.configure(highlightcolor="black")
        self.cantidadVariablesEntry.configure(insertbackground="black")
        self.cantidadVariablesEntry.configure(selectbackground="#c4c4c4")
        self.cantidadVariablesEntry.configure(selectforeground="black")

        self.intentosEntry = Entry(top)
        self.intentosEntry.place(relx=0.43, rely=0.24, relheight=0.04
                , relwidth=0.2)
        self.intentosEntry.configure(background="white")
        self.intentosEntry.configure(disabledforeground="#a3a3a3")
        self.intentosEntry.configure(font="TkFixedFont")
        self.intentosEntry.configure(foreground="#000000")
        self.intentosEntry.configure(highlightbackground="#d9d9d9")
        self.intentosEntry.configure(highlightcolor="black")
        self.intentosEntry.configure(insertbackground="black")
        self.intentosEntry.configure(selectbackground="#c4c4c4")
        self.intentosEntry.configure(selectforeground="black")

        self.funcionCombo = ttk.Combobox(top)
        self.funcionCombo.place(relx=0.17, rely=0.56, relheight=0.04
                , relwidth=0.2)
        self.value_list = [3,6,16,]
        self.funcionCombo.configure(values=self.value_list)
        self.funcionCombo.configure(textvariable=principal_support.combobox)
        self.funcionCombo.configure(takefocus="")

        self.tramasSolicitudListBox = ScrolledListBox(top)
        self.tramasSolicitudListBox.place(relx=0.45, rely=0.41, relheight=0.22
                , relwidth=0.26)
        self.tramasSolicitudListBox.configure(background="white")
        self.tramasSolicitudListBox.configure(disabledforeground="#a3a3a3")
        self.tramasSolicitudListBox.configure(font="TkFixedFont")
        self.tramasSolicitudListBox.configure(foreground="black")
        self.tramasSolicitudListBox.configure(highlightbackground="#d9d9d9")
        self.tramasSolicitudListBox.configure(highlightcolor="#d9d9d9")
        self.tramasSolicitudListBox.configure(selectbackground="#c4c4c4")
        self.tramasSolicitudListBox.configure(selectforeground="black")
        self.tramasSolicitudListBox.configure(width=10)

        self.conectarBtn = Button(top)
        self.conectarBtn.place(relx=0.01, rely=0.18, height=50, width=120)
        self.conectarBtn.configure(activebackground="#d9d9d9")
        self.conectarBtn.configure(activeforeground="#000000")
        self.conectarBtn.configure(background="#d9d9d9")
        self.conectarBtn.configure(command=principal_support.conectar)
        self.conectarBtn.configure(disabledforeground="#a3a3a3")
        self.conectarBtn.configure(foreground="#000000")
        self.conectarBtn.configure(highlightbackground="#d9d9d9")
        self.conectarBtn.configure(highlightcolor="black")
        self.conectarBtn.configure(pady="0")
        self.conectarBtn.configure(text='''Conectar''')

        self.desconectarBtn = Button(top)
        self.desconectarBtn.place(relx=0.12, rely=0.18, height=50, width=120)
        self.desconectarBtn.configure(activebackground="#d9d9d9")
        self.desconectarBtn.configure(activeforeground="black")
        self.desconectarBtn.configure(background="#d9d9d9")
        self.desconectarBtn.configure(command=principal_support.desconectar)
        self.desconectarBtn.configure(disabledforeground="#a3a3a3")
        self.desconectarBtn.configure(foreground="#000000")
        self.desconectarBtn.configure(highlightbackground="#d9d9d9")
        self.desconectarBtn.configure(highlightcolor="black")
        self.desconectarBtn.configure(pady="0")
        self.desconectarBtn.configure(text='''Desconectar''')

        self.tramasRespuestaListBox = ScrolledListBox(top)
        self.tramasRespuestaListBox.place(relx=0.71, rely=0.41, relheight=0.22
                , relwidth=0.26)
        self.tramasRespuestaListBox.configure(background="white")
        self.tramasRespuestaListBox.configure(disabledforeground="#a3a3a3")
        self.tramasRespuestaListBox.configure(font="TkFixedFont")
        self.tramasRespuestaListBox.configure(foreground="black")
        self.tramasRespuestaListBox.configure(highlightbackground="#d9d9d9")
        self.tramasRespuestaListBox.configure(highlightcolor="#d9d9d9")
        self.tramasRespuestaListBox.configure(selectbackground="#c4c4c4")
        self.tramasRespuestaListBox.configure(selectforeground="black")
        self.tramasRespuestaListBox.configure(width=10)

        self.respuestaListBox = ScrolledListBox(top)
        self.respuestaListBox.place(relx=0.56, rely=0.7, relheight=0.29
                , relwidth=0.42)
        self.respuestaListBox.configure(background="white")
        self.respuestaListBox.configure(disabledforeground="#a3a3a3")
        self.respuestaListBox.configure(font="TkFixedFont")
        self.respuestaListBox.configure(foreground="black")
        self.respuestaListBox.configure(highlightbackground="#d9d9d9")
        self.respuestaListBox.configure(highlightcolor="#d9d9d9")
        self.respuestaListBox.configure(selectbackground="#c4c4c4")
        self.respuestaListBox.configure(selectforeground="black")
        self.respuestaListBox.configure(width=10)

        self.hexaBtn = Button(top)
        self.hexaBtn.place(relx=0.46, rely=0.71, height=40, width=120)
        self.hexaBtn.configure(activebackground="#d9d9d9")
        self.hexaBtn.configure(activeforeground="#000000")
        self.hexaBtn.configure(background="#d9d9d9")
        self.hexaBtn.configure(command=principal_support.convertirHexadecimal)
        self.hexaBtn.configure(disabledforeground="#a3a3a3")
        self.hexaBtn.configure(foreground="#000000")
        self.hexaBtn.configure(highlightbackground="#d9d9d9")
        self.hexaBtn.configure(highlightcolor="black")
        self.hexaBtn.configure(pady="0")
        self.hexaBtn.configure(text='''Hexadecimal''')

        self.decimalBtn = Button(top)
        self.decimalBtn.place(relx=0.46, rely=0.79, height=40, width=120)
        self.decimalBtn.configure(activebackground="#d9d9d9")
        self.decimalBtn.configure(activeforeground="#000000")
        self.decimalBtn.configure(background="#d9d9d9")
        self.decimalBtn.configure(command=principal_support.convertirDecimal)
        self.decimalBtn.configure(disabledforeground="#a3a3a3")
        self.decimalBtn.configure(foreground="#000000")
        self.decimalBtn.configure(highlightbackground="#d9d9d9")
        self.decimalBtn.configure(highlightcolor="black")
        self.decimalBtn.configure(pady="0")
        self.decimalBtn.configure(text='''Decimal''')

        self.binarioBtn = Button(top)
        self.binarioBtn.place(relx=0.46, rely=0.87, height=40, width=120)
        self.binarioBtn.configure(activebackground="#d9d9d9")
        self.binarioBtn.configure(activeforeground="#000000")
        self.binarioBtn.configure(background="#d9d9d9")
        self.binarioBtn.configure(command=principal_support.convertirBinario)
        self.binarioBtn.configure(disabledforeground="#a3a3a3")
        self.binarioBtn.configure(foreground="#000000")
        self.binarioBtn.configure(highlightbackground="#d9d9d9")
        self.binarioBtn.configure(highlightcolor="black")
        self.binarioBtn.configure(pady="0")
        self.binarioBtn.configure(text='''Binario''')

        self.tramasSolicitudLb = Label(top)
        self.tramasSolicitudLb.place(relx=0.45, rely=0.36, height=31, width=330)
        self.tramasSolicitudLb.configure(activebackground="#f9f9f9")
        self.tramasSolicitudLb.configure(activeforeground="black")
        self.tramasSolicitudLb.configure(background="#e0e1f5")
        self.tramasSolicitudLb.configure(disabledforeground="#a3a3a3")
        self.tramasSolicitudLb.configure(font=font10)
        self.tramasSolicitudLb.configure(foreground="#000000")
        self.tramasSolicitudLb.configure(highlightbackground="#d9d9d9")
        self.tramasSolicitudLb.configure(highlightcolor="black")
        self.tramasSolicitudLb.configure(relief=GROOVE)
        self.tramasSolicitudLb.configure(text='''Tramas de Solicitud''')

        self.tramasRespuestaLb = Label(top)
        self.tramasRespuestaLb.place(relx=0.71, rely=0.36, height=31, width=330)
        self.tramasRespuestaLb.configure(activebackground="#f9f9f9")
        self.tramasRespuestaLb.configure(activeforeground="black")
        self.tramasRespuestaLb.configure(background="#e0e1f5")
        self.tramasRespuestaLb.configure(disabledforeground="#a3a3a3")
        self.tramasRespuestaLb.configure(font=font10)
        self.tramasRespuestaLb.configure(foreground="#000000")
        self.tramasRespuestaLb.configure(highlightbackground="#d9d9d9")
        self.tramasRespuestaLb.configure(highlightcolor="black")
        self.tramasRespuestaLb.configure(relief=GROOVE)
        self.tramasRespuestaLb.configure(text='''Tramas de Respuesta''')
        self.tramasRespuestaLb.configure(width=330)

        self.respuestasLb = Label(top)
        self.respuestasLb.place(relx=0.45, rely=0.65, height=31, width=660)
        self.respuestasLb.configure(activebackground="#f9f9f9")
        self.respuestasLb.configure(activeforeground="black")
        self.respuestasLb.configure(background="#e0e1f5")
        self.respuestasLb.configure(disabledforeground="#a3a3a3")
        self.respuestasLb.configure(font=font10)
        self.respuestasLb.configure(foreground="#000000")
        self.respuestasLb.configure(highlightbackground="#d9d9d9")
        self.respuestasLb.configure(highlightcolor="black")
        self.respuestasLb.configure(relief=GROOVE)
        self.respuestasLb.configure(text='''Respuestas''')
        self.respuestasLb.configure(width=660)

        self.valorEstadoConexionLb = Label(top)
        self.valorEstadoConexionLb.place(relx=0.14, rely=0.29, height=31
                , width=349)
        self.valorEstadoConexionLb.configure(activebackground="#f9f9f9")
        self.valorEstadoConexionLb.configure(activeforeground="black")
        self.valorEstadoConexionLb.configure(anchor=W)
        self.valorEstadoConexionLb.configure(background="#e7e7e7")
        self.valorEstadoConexionLb.configure(disabledforeground="#a3a3a3")
        self.valorEstadoConexionLb.configure(foreground="#5337f2")
        self.valorEstadoConexionLb.configure(highlightbackground="#d9d9d9")
        self.valorEstadoConexionLb.configure(highlightcolor="black")
        self.valorEstadoConexionLb.configure(text='''Desconectado''')

        self.variable1Lb = Label(top)
        self.variable1Lb.place(relx=0.02, rely=0.7, height=30, width=190)
        self.variable1Lb.configure(activebackground="#f9f9f9")
        self.variable1Lb.configure(activeforeground="black")
        self.variable1Lb.configure(anchor=E)
        self.variable1Lb.configure(background="#e7e7e7")
        self.variable1Lb.configure(disabledforeground="#a3a3a3")
        self.variable1Lb.configure(foreground="#000000")
        self.variable1Lb.configure(highlightbackground="#d9d9d9")
        self.variable1Lb.configure(highlightcolor="black")
        self.variable1Lb.configure(text='''Variable 1''')

        self.variable1Entry = Entry(top)
        self.variable1Entry.place(relx=0.17, rely=0.7, relheight=0.04
                , relwidth=0.2)
        self.variable1Entry.configure(background="white")
        self.variable1Entry.configure(disabledforeground="#a3a3a3")
        self.variable1Entry.configure(font="TkFixedFont")
        self.variable1Entry.configure(foreground="#000000")
        self.variable1Entry.configure(highlightbackground="#d9d9d9")
        self.variable1Entry.configure(highlightcolor="black")
        self.variable1Entry.configure(insertbackground="black")
        self.variable1Entry.configure(selectbackground="#c4c4c4")
        self.variable1Entry.configure(selectforeground="black")

        self.variable2Lb = Label(top)
        self.variable2Lb.place(relx=0.02, rely=0.74, height=30, width=190)
        self.variable2Lb.configure(activebackground="#f9f9f9")
        self.variable2Lb.configure(activeforeground="black")
        self.variable2Lb.configure(anchor=E)
        self.variable2Lb.configure(background="#e7e7e7")
        self.variable2Lb.configure(disabledforeground="#a3a3a3")
        self.variable2Lb.configure(foreground="#000000")
        self.variable2Lb.configure(highlightbackground="#d9d9d9")
        self.variable2Lb.configure(highlightcolor="black")
        self.variable2Lb.configure(text='''Variable 2''')

        self.variable2Entry = Entry(top)
        self.variable2Entry.place(relx=0.17, rely=0.74, relheight=0.04
                , relwidth=0.2)
        self.variable2Entry.configure(background="white")
        self.variable2Entry.configure(disabledforeground="#a3a3a3")
        self.variable2Entry.configure(font="TkFixedFont")
        self.variable2Entry.configure(foreground="#000000")
        self.variable2Entry.configure(highlightbackground="#d9d9d9")
        self.variable2Entry.configure(highlightcolor="black")
        self.variable2Entry.configure(insertbackground="black")
        self.variable2Entry.configure(selectbackground="#c4c4c4")
        self.variable2Entry.configure(selectforeground="black")

        self.variable3Lb = Label(top)
        self.variable3Lb.place(relx=0.02, rely=0.79, height=30, width=190)
        self.variable3Lb.configure(activebackground="#f9f9f9")
        self.variable3Lb.configure(activeforeground="black")
        self.variable3Lb.configure(anchor=E)
        self.variable3Lb.configure(background="#e7e7e7")
        self.variable3Lb.configure(disabledforeground="#a3a3a3")
        self.variable3Lb.configure(foreground="#000000")
        self.variable3Lb.configure(highlightbackground="#d9d9d9")
        self.variable3Lb.configure(highlightcolor="black")
        self.variable3Lb.configure(text='''Variable 3''')

        self.variable4Lb = Label(top)
        self.variable4Lb.place(relx=0.02, rely=0.84, height=30, width=190)
        self.variable4Lb.configure(activebackground="#f9f9f9")
        self.variable4Lb.configure(activeforeground="black")
        self.variable4Lb.configure(anchor=E)
        self.variable4Lb.configure(background="#e7e7e7")
        self.variable4Lb.configure(disabledforeground="#a3a3a3")
        self.variable4Lb.configure(foreground="#000000")
        self.variable4Lb.configure(highlightbackground="#d9d9d9")
        self.variable4Lb.configure(highlightcolor="black")
        self.variable4Lb.configure(text='''Variable 4''')

        self.variable3Entry = Entry(top)
        self.variable3Entry.place(relx=0.17, rely=0.79, relheight=0.04
                , relwidth=0.2)
        self.variable3Entry.configure(background="white")
        self.variable3Entry.configure(disabledforeground="#a3a3a3")
        self.variable3Entry.configure(font="TkFixedFont")
        self.variable3Entry.configure(foreground="#000000")
        self.variable3Entry.configure(highlightbackground="#d9d9d9")
        self.variable3Entry.configure(highlightcolor="black")
        self.variable3Entry.configure(insertbackground="black")
        self.variable3Entry.configure(selectbackground="#c4c4c4")
        self.variable3Entry.configure(selectforeground="black")

        self.variable4Entry = Entry(top)
        self.variable4Entry.place(relx=0.17, rely=0.84, relheight=0.04
                , relwidth=0.2)
        self.variable4Entry.configure(background="white")
        self.variable4Entry.configure(disabledforeground="#a3a3a3")
        self.variable4Entry.configure(font="TkFixedFont")
        self.variable4Entry.configure(foreground="#000000")
        self.variable4Entry.configure(highlightbackground="#d9d9d9")
        self.variable4Entry.configure(highlightcolor="black")
        self.variable4Entry.configure(insertbackground="black")
        self.variable4Entry.configure(selectbackground="#c4c4c4")
        self.variable4Entry.configure(selectforeground="black")

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active',"_ana2color")])
        self.TCheckbutton1 = ttk.Checkbutton(top)
        self.TCheckbutton1.place(relx=-0.1, rely=0.73, relwidth=0.06
                , relheight=0.0, height=31)
        self.TCheckbutton1.configure(variable=principal_support.tch37)
        self.TCheckbutton1.configure(takefocus="")
        self.TCheckbutton1.configure(text='''Tcheck''')

        self.estadoConexionLb = ttk.Label(top)
        self.estadoConexionLb.place(relx=0.01, rely=0.29, height=29, width=150)
        self.estadoConexionLb.configure(background="#e7e7e7")
        self.estadoConexionLb.configure(foreground="#000000")
        self.estadoConexionLb.configure(relief=FLAT)
        self.estadoConexionLb.configure(text='''Estado conexion:''')

        self.direccionIpLb = Label(top)
        self.direccionIpLb.place(relx=0.63, rely=0.09, height=30, width=190)
        self.direccionIpLb.configure(activebackground="#f9f9f9")
        self.direccionIpLb.configure(activeforeground="black")
        self.direccionIpLb.configure(anchor=E)
        self.direccionIpLb.configure(background="#e7e7e7")
        self.direccionIpLb.configure(disabledforeground="#a3a3a3")
        self.direccionIpLb.configure(foreground="#000000")
        self.direccionIpLb.configure(highlightbackground="#d9d9d9")
        self.direccionIpLb.configure(highlightcolor="black")
        self.direccionIpLb.configure(justify=RIGHT)
        self.direccionIpLb.configure(text='''Direccion IP''')

        self.puertoTCPLb = Label(top)
        self.puertoTCPLb.place(relx=0.63, rely=0.14, height=30, width=190)
        self.puertoTCPLb.configure(activebackground="#f9f9f9")
        self.puertoTCPLb.configure(activeforeground="black")
        self.puertoTCPLb.configure(anchor=E)
        self.puertoTCPLb.configure(background="#e7e7e7")
        self.puertoTCPLb.configure(disabledforeground="#a3a3a3")
        self.puertoTCPLb.configure(foreground="#000000")
        self.puertoTCPLb.configure(highlightbackground="#d9d9d9")
        self.puertoTCPLb.configure(highlightcolor="black")
        self.puertoTCPLb.configure(justify=RIGHT)
        self.puertoTCPLb.configure(text='''Puerto''')

        self.direccionIPEntry = Entry(top)
        self.direccionIPEntry.place(relx=0.79, rely=0.09, relheight=0.04
                , relwidth=0.2)
        self.direccionIPEntry.configure(background="white")
        self.direccionIPEntry.configure(disabledforeground="#a3a3a3")
        self.direccionIPEntry.configure(font="TkFixedFont")
        self.direccionIPEntry.configure(foreground="#000000")
        self.direccionIPEntry.configure(highlightbackground="#d9d9d9")
        self.direccionIPEntry.configure(highlightcolor="black")
        self.direccionIPEntry.configure(insertbackground="black")
        self.direccionIPEntry.configure(selectbackground="#c4c4c4")
        self.direccionIPEntry.configure(selectforeground="black")

        self.puertoTCPEntry = Entry(top)
        self.puertoTCPEntry.place(relx=0.79, rely=0.13, relheight=0.04
                , relwidth=0.2)
        self.puertoTCPEntry.configure(background="white")
        self.puertoTCPEntry.configure(disabledforeground="#a3a3a3")
        self.puertoTCPEntry.configure(font="TkFixedFont")
        self.puertoTCPEntry.configure(foreground="#000000")
        self.puertoTCPEntry.configure(highlightbackground="#d9d9d9")
        self.puertoTCPEntry.configure(highlightcolor="black")
        self.puertoTCPEntry.configure(insertbackground="black")
        self.puertoTCPEntry.configure(selectbackground="#c4c4c4")
        self.puertoTCPEntry.configure(selectforeground="black")

        self.puertoSerialRB = Radiobutton(top)
        self.puertoSerialRB.place(relx=0.02, rely=0.03, relheight=0.06
                , relwidth=0.16)
        self.puertoSerialRB.configure(activebackground="#d9d9d9")
        self.puertoSerialRB.configure(activeforeground="#000000")
        self.puertoSerialRB.configure(anchor=W)
        self.puertoSerialRB.configure(background="#e7e7e7")
        self.puertoSerialRB.configure(command=principal_support.puertoSerialRBSeleccionado)
        self.puertoSerialRB.configure(disabledforeground="#a3a3a3")
        self.puertoSerialRB.configure(foreground="#000000")
        self.puertoSerialRB.configure(highlightbackground="#d9d9d9")
        self.puertoSerialRB.configure(highlightcolor="black")
        self.puertoSerialRB.configure(justify=LEFT)
        self.puertoSerialRB.configure(relief=GROOVE)
        self.puertoSerialRB.configure(text='''Puerto Serial''')

        self.tcpRB = Radiobutton(top)
        self.tcpRB.place(relx=0.02, rely=0.09, relheight=0.06, relwidth=0.16)
        self.tcpRB.configure(activebackground="#d9d9d9")
        self.tcpRB.configure(activeforeground="#000000")
        self.tcpRB.configure(anchor=W)
        self.tcpRB.configure(background="#e7e7e7")
        self.tcpRB.configure(command=principal_support.tcpRBSeleccionado)
        self.tcpRB.configure(disabledforeground="#a3a3a3")
        self.tcpRB.configure(foreground="#000000")
        self.tcpRB.configure(highlightbackground="#d9d9d9")
        self.tcpRB.configure(highlightcolor="black")
        self.tcpRB.configure(justify=LEFT)
        self.tcpRB.configure(relief=GROOVE)
        self.tcpRB.configure(text='''TCP''')

        self.configLlamadaLb = Label(top)
        self.configLlamadaLb.place(relx=0.02, rely=0.4, height=41, width=440)
        self.configLlamadaLb.configure(activebackground="#f9f9f9")
        self.configLlamadaLb.configure(activeforeground="black")
        self.configLlamadaLb.configure(background="#c8bdf4")
        self.configLlamadaLb.configure(disabledforeground="#a3a3a3")
        self.configLlamadaLb.configure(font=font9)
        self.configLlamadaLb.configure(foreground="#000000")
        self.configLlamadaLb.configure(highlightbackground="#d9d9d9")
        self.configLlamadaLb.configure(highlightcolor="black")
        self.configLlamadaLb.configure(relief=GROOVE)
        self.configLlamadaLb.configure(text='''Configuracion Llamada''')
        self.configLlamadaLb.configure(width=440)

        self.tramasLb = Label(top)
        self.tramasLb.place(relx=0.45, rely=0.3, height=41, width=660)
        self.tramasLb.configure(activebackground="#f9f9f9")
        self.tramasLb.configure(activeforeground="black")
        self.tramasLb.configure(background="#c8bdf4")
        self.tramasLb.configure(disabledforeground="#a3a3a3")
        self.tramasLb.configure(font=font9)
        self.tramasLb.configure(foreground="#000000")
        self.tramasLb.configure(highlightbackground="#d9d9d9")
        self.tramasLb.configure(highlightcolor="black")
        self.tramasLb.configure(relief=GROOVE)
        self.tramasLb.configure(text='''Tramas''')
        self.tramasLb.configure(width=660)

        self.configPuertoSerieLb = Label(top)
        self.configPuertoSerieLb.place(relx=0.28, rely=0.02, height=41
                , width=440)
        self.configPuertoSerieLb.configure(activebackground="#f9f9f9")
        self.configPuertoSerieLb.configure(activeforeground="black")
        self.configPuertoSerieLb.configure(background="#c8bdf4")
        self.configPuertoSerieLb.configure(disabledforeground="#a3a3a3")
        self.configPuertoSerieLb.configure(font=font9)
        self.configPuertoSerieLb.configure(foreground="#000000")
        self.configPuertoSerieLb.configure(highlightbackground="#d9d9d9")
        self.configPuertoSerieLb.configure(highlightcolor="black")
        self.configPuertoSerieLb.configure(relief=GROOVE)
        self.configPuertoSerieLb.configure(text='''Configuracion Puerto Serie''')
        self.configPuertoSerieLb.configure(width=440)

        self.configTCPLb = Label(top)
        self.configTCPLb.place(relx=0.63, rely=0.02, height=41, width=450)
        self.configTCPLb.configure(activebackground="#f9f9f9")
        self.configTCPLb.configure(activeforeground="black")
        self.configTCPLb.configure(background="#c8bdf4")
        self.configTCPLb.configure(disabledforeground="#a3a3a3")
        self.configTCPLb.configure(font=font9)
        self.configTCPLb.configure(foreground="#000000")
        self.configTCPLb.configure(highlightbackground="#d9d9d9")
        self.configTCPLb.configure(highlightcolor="black")
        self.configTCPLb.configure(relief=GROOVE)
        self.configTCPLb.configure(text='''Configuracion TCP''')
        self.configTCPLb.configure(width=450)

        self.timeOutTCPEntry = Entry(top)
        self.timeOutTCPEntry.place(relx=0.79, rely=0.18, relheight=0.04
                , relwidth=0.2)
        self.timeOutTCPEntry.configure(background="white")
        self.timeOutTCPEntry.configure(disabledforeground="#a3a3a3")
        self.timeOutTCPEntry.configure(font="TkFixedFont")
        self.timeOutTCPEntry.configure(foreground="#000000")
        self.timeOutTCPEntry.configure(highlightbackground="#d9d9d9")
        self.timeOutTCPEntry.configure(highlightcolor="black")
        self.timeOutTCPEntry.configure(insertbackground="black")
        self.timeOutTCPEntry.configure(selectbackground="#c4c4c4")
        self.timeOutTCPEntry.configure(selectforeground="black")

        self.timrOutTCPLb = Label(top)
        self.timrOutTCPLb.place(relx=0.63, rely=0.18, height=30, width=190)
        self.timrOutTCPLb.configure(activebackground="#f9f9f9")
        self.timrOutTCPLb.configure(activeforeground="black")
        self.timrOutTCPLb.configure(anchor=E)
        self.timrOutTCPLb.configure(background="#e7e7e7")
        self.timrOutTCPLb.configure(disabledforeground="#a3a3a3")
        self.timrOutTCPLb.configure(foreground="#000000")
        self.timrOutTCPLb.configure(highlightbackground="#d9d9d9")
        self.timrOutTCPLb.configure(highlightcolor="black")
        self.timrOutTCPLb.configure(justify=RIGHT)
        self.timrOutTCPLb.configure(text='''Time Out''')





# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = Pack.__dict__.keys() | Grid.__dict__.keys() \
                  | Place.__dict__.keys()
        else:
            methods = Pack.__dict__.keys() + Grid.__dict__.keys() \
                  + Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        return func(cls, container, **kw)
    return wrapped

class ScrolledListBox(AutoScroll, Listbox):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        Listbox.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

if __name__ == '__main__':
    vp_start_gui()



